version: "3.3"

services:
  db:
    image: postgres:16
    container_name: django-db
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}

  web:
    restart: on-failure
    image: django_web_scraper_image
    container_name: django-web
    command: >
      sh -c "cd web &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db

  superuser:
    restart: on-failure
    image: django_web_scraper_image
    container_name: django-superuser
    command: >
      sh -c "cd web &&
             python manage.py create_default_superuser"
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - web

  scraper:
    restart: on-failure
    image: django_web_scraper_image
    container_name: django-scraper
    command: >
      sh -c "cd scrapy &&
             playwright install &&
             python start_scraper.py"
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - web

  redis:
    image: redis:5.0.0
  celery:
    image: django_web_scraper_image
    command: >
      sh -c "cd web &&
             celery -A config worker -l info"
    volumes:
      - .:/code
    depends_on:
      - redis
      - web
      - scraper
